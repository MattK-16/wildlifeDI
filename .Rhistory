txtsz = 3
gg = ggplot() +
#geom_rect(data=example_rect, aes(xmin=start,xmax=end,ymin=bottom,ymax=top),fill= 'blue',alpha=0.4) +
geom_line(data = df,color = 'grey',mapping = aes(x=jDay,y=!!column,group = !!poly)) +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                  #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +        #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown (Toronto/Peel) -  Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
geom_ribbon(data=df_rib, mapping=aes(x=jDay,ymin=p10,ymax=p90),fill='coral',alpha=0.2) +
geom_line(data = df_mean,mapping=aes(x=jDay,y=!!column),color='black',lwd=1) +
geom_rect(data=bl_rect, aes(xmin=start,xmax=end,ymin=bottom,ymax=top),fill=NA, color='purple',alpha=0.4) +
annotate('text',x=45,y=Inf,vjust=2.5,label='Baseline',color='purple',size=txtsz) +
geom_hline(yintercept=100,color='#3F3F3f',lwd=1,lty=2) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul',
'Aug','Sep','Oct','Nov','Dec')) +
labs(y=laby,x='') +
theme_light()
if (!is.null(limy)) { gg = gg + coord_cartesian(ylim=c(0, limy))}
return(gg)
}
ada_poly = st_read('D:/Data/Canada/Census/ada_ontario_with_HR.shp',stringsAsFactors=F)
ada_poly$ADAUID = as.numeric(ada_poly$ADAUID)
covid = read.csv('D:/Covid_19/Data/covid_ontario_2021-01-12.csv',stringsAsFactors = F)
covid$day = sapply(covid$Accurate_Episode_Date, function(x) unlist(strsplit(x,'T'))[1])
covid$day = as.Date(strptime(covid$day,format='%Y-%m-%d'))
covid = subset(covid, day < as.Date(strptime('2021-01-01',format='%Y-%m-%d')) )
covid$jDay = as.numeric(strftime(covid$day, format = "%j"))
conv = read.csv('D:/Covid_19/data/HR_cases_convert.txt',sep="\t") #File to add HRUID to hr name
covid2 = left_join(covid,conv,by=c('Reporting_PHU'='Name'))
hr_temp = data.frame(HRUID=unique(covid2$HRUID))
hr_cov = data.frame(HRUID=NULL,cases=NULL,jDay=NULL)
prov_cov = data.frame(jDay=NULL,cases=NULL)
for (i in 1:366){
cov_i = subset(covid2,jDay == i)
prov_cnt = data.frame(jDay=i,cases=nrow(cov_i))
tab = data.frame(table(cov_i$HRUID),stringsAsFactors=FALSE)
tab$Var1 = as.numeric(as.character(tab$Var1))
cov_i_temp = left_join(hr_temp, tab, by=c('HRUID'='Var1'))
cov_i_temp$jDay = i
names(cov_i_temp) = c('HRUID','cases','jDay')
prov_cov = rbind(prov_cov,prov_cnt)
hr_cov = rbind(hr_cov,cov_i_temp)
}
prov_cov$cases[is.na(prov_cov$cases)] = 0
hr_cov$cases[is.na(hr_cov$cases)] = 0
prov_cov$gr = NA
hr_cov$gr = NA
for (i in 7:305){
num = log(sum(prov_cov$cases[(i-2):i]/3,na.rm=TRUE))
den = log(sum(prov_cov$cases[(i-6):i]/7,na.rm=TRUE))
prov_cov$gr[i] = num/den
for (hr in unique(hr_cov$HRUID)){
hr_temp = subset(hr_cov,HRUID == hr)
num = sum(hr_temp$cases[(i-2):i]/3,na.rm=TRUE)
den = sum(hr_temp$cases[(i-6):i]/7,na.rm=TRUE)
ind = which(hr_cov$HRUID == hr & hr_cov$jDay == i)
if (num >= 1 & den >= 1){
hr_cov$gr[ind] = num/den
}
}
}
txtsz = 3
plot_case = ggplot() +
geom_line(data=prov_cov, aes(x=jDay,y=cases)) +
#geom_line(data=hr_cov, aes(x=jDay,y=cases,color=HRUID),color='grey') +
#geom_rect(data=rect, aes(xmin=x1,xmax=x2,ymin=y1,ymax=y2),fill=NA,color='blue',alpha=0.4)+
scale_y_continuous(breaks=c(0, 200, 400, 600, 800)) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec')) +
xlab('') +
ylab('Cases') +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +       #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz) +
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown (Toronto/Peel) -  Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
theme_light()
plot_case
gg5 = ts_plot(df_bl,stat='bl_avg_h_RoG',laby='RoG',limy=400)
gg6 = ts_plot(df_bl,stat='bl_avg_TotalDur',laby='TOH',limy=200)
gg7 = ts_plot(df_bl,stat='bl_avg_d_shannon',laby='DIV',limy=150)
gg5 = gg5 + labs(tag='b)')
gg6 = gg6 + labs(tag='c)')
gg7 = gg7 + labs(tag='d)')
plot_case = plot_case + labs(tag='a)')
plot = grid.arrange(plot_case, gg5,gg6,gg7,nrow=4)
ggsave(plot,file='Fig 1 - TSPlot.png',width=8,height=10)
ts_plot = function(df,q1=0.0275,q2=0.975,
stat='med_h_RoG',poly='ADAUID',
laby='Y Axis LABEL',limy=NULL){
if(is.null(limy)){limy = max(df[,stat])}
column <- sym(stat)
poly <- sym(poly)
df_mean = df %>%
group_by(jDay) %>%
summarise_all(mean,na.rm=TRUE)
df_90 = df %>%
group_by(jDay) %>%
summarise_all(quantile,q2,na.rm=TRUE)
df_10 = df %>%
group_by(jDay) %>%
summarise_all(quantile,q1,na.rm=TRUE)
bl_rect = data.frame(start=c(32),end=c(60),top=c(limy),bottom=c(0))
df_rib = data.frame(df_90$jDay,df_10[,c(stat)],df_90[,c(stat)])
names(df_rib) = c('jDay','p10','p90')
txtsz = 3
gg = ggplot() +
#geom_rect(data=example_rect, aes(xmin=start,xmax=end,ymin=bottom,ymax=top),fill= 'blue',alpha=0.4) +
geom_line(data = df,color = 'grey',mapping = aes(x=jDay,y=!!column,group = !!poly)) +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                  #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +        #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown* -  Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
geom_ribbon(data=df_rib, mapping=aes(x=jDay,ymin=p10,ymax=p90),fill='coral',alpha=0.2) +
geom_line(data = df_mean,mapping=aes(x=jDay,y=!!column),color='black',lwd=1) +
geom_rect(data=bl_rect, aes(xmin=start,xmax=end,ymin=bottom,ymax=top),fill=NA, color='purple',alpha=0.4) +
annotate('text',x=45,y=Inf,vjust=2.5,label='Baseline',color='purple',size=txtsz) +
geom_hline(yintercept=100,color='#3F3F3f',lwd=1,lty=2) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul',
'Aug','Sep','Oct','Nov','Dec')) +
labs(y=laby,x='') +
theme_light()
if (!is.null(limy)) { gg = gg + coord_cartesian(ylim=c(0, limy))}
return(gg)
}
txtsz = 3
plot_case = ggplot() +
geom_line(data=prov_cov, aes(x=jDay,y=cases)) +
#geom_line(data=hr_cov, aes(x=jDay,y=cases,color=HRUID),color='grey') +
#geom_rect(data=rect, aes(xmin=x1,xmax=x2,ymin=y1,ymax=y2),fill=NA,color='blue',alpha=0.4)+
scale_y_continuous(breaks=c(0, 200, 400, 600, 800)) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec')) +
xlab('') +
ylab('Cases') +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +       #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz) +
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown* - Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
theme_light()
plot_case
gg5 = ts_plot(df_bl,stat='bl_avg_h_RoG',laby='RoG',limy=400)
gg6 = ts_plot(df_bl,stat='bl_avg_TotalDur',laby='TOH',limy=200)
gg7 = ts_plot(df_bl,stat='bl_avg_d_shannon',laby='DIV',limy=150)
gg5 = gg5 + labs(tag='b)')
gg6 = gg6 + labs(tag='c)')
gg7 = gg7 + labs(tag='d)')
plot_case = plot_case + labs(tag='a)')
plot = grid.arrange(plot_case, gg5,gg6,gg7,nrow=4)
ggsave(plot,file='Fig 1 - TSPlot.png',width=8,height=10)
txtsz = 3
plot_case = ggplot() +
geom_line(data=prov_cov, aes(x=jDay,y=cases)) +
#geom_line(data=hr_cov, aes(x=jDay,y=cases,color=HRUID),color='grey') +
#geom_rect(data=rect, aes(xmin=x1,xmax=x2,ymin=y1,ymax=y2),fill=NA,color='blue',alpha=0.4)+
#scale_y_continuous(breaks=c(0, 200, 400, 600, 800)) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec')) +
xlab('') +
ylab('Cases') +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +       #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz) +
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown* - Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
theme_light()
plot_case
txtsz = 3
plot_case = ggplot() +
geom_line(data=prov_cov, aes(x=jDay,y=cases)) +
#geom_line(data=hr_cov, aes(x=jDay,y=cases,color=HRUID),color='grey') +
#geom_rect(data=rect, aes(xmin=x1,xmax=x2,ymin=y1,ymax=y2),fill=NA,color='blue',alpha=0.4)+
#scale_y_continuous(breaks=c(0, 200, 400, 600, 800)) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec')) +
xlab('') +
ylab('Daily New Cases') +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +       #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +        #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz) +
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown* - Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
theme_light()
plot_case
gg5 = ts_plot(df_bl,stat='bl_avg_h_RoG',laby='RoG',limy=400)
gg6 = ts_plot(df_bl,stat='bl_avg_TotalDur',laby='TOH',limy=200)
gg7 = ts_plot(df_bl,stat='bl_avg_d_shannon',laby='DIV',limy=150)
gg5 = gg5 + labs(tag='b)')
gg6 = gg6 + labs(tag='c)')
gg7 = gg7 + labs(tag='d)')
plot_case = plot_case + labs(tag='a)')
plot = grid.arrange(plot_case, gg5,gg6,gg7,nrow=4)
ggsave(plot,file='Fig 1 - TSPlot.png',width=8,height=10)
library(ggplot2)
library(dplyr)
library(sf)
library(gridExtra)
library(reshape2)
library(tidyverse)
df = read.csv('D:/COVID_19/Data/ADA_Mobility_2020_01_12.csv')
length(unique(df$ADAUID))
df = df[df$n_RoG > 99,]
nmax = max(df$jDay)
df_count = df %>%
group_by(ADAUID) %>%
summarise(n = n()) %>%
as.data.frame()
ada_keep = df_count$ADAUID[which(df_count$n == nmax)]
df = df[df$ADAUID %in% ada_keep,]
length(unique(df$ADAUID))
nday = max(df$jDay)
df3 = df[order(df$ADAUID,df$jDay),]
#January 1 is a wednesday
df3$DoW = factor(rep(c('We','Th','Fr','Sa','Su','Mo','Tu'),length=nday))
#February data
bl_rec = subset(df3, jDay > 31 & jDay < 61) %>%
group_by(ADAUID,DoW) %>%
select(ADAUID,DoW,avg_h_RoG,avg_TotalDur,avg_d_shannon) %>%
summarise_all(mean)
df_bl <- left_join(df3, bl_rec,by = c('ADAUID', 'DoW'))
df_bl$bl_avg_h_RoG = df_bl$avg_h_RoG.x/df_bl$avg_h_RoG.y * 100
df_bl$bl_avg_TotalDur = df_bl$avg_TotalDur.x/df_bl$avg_TotalDur.y * 100
df_bl$bl_avg_d_shannon = df_bl$avg_d_shannon.x/df_bl$avg_d_shannon.y * 100
df_bl = df_bl[,c('ADAUID','jDay','bl_avg_h_RoG','bl_avg_TotalDur','bl_avg_d_shannon')]
#write.csv(df_bl,file='D:/COVID_19/Data/ForDashboard_Jan-Oct.csv')
da_poly = st_read('D:/data/Canada/census/lda_000a16a_e.shp')
da = st_drop_geometry(da_poly)
da$DAUID = as.numeric(da$DAUID)
imd = read.csv('D:/COVID_19/Data/on_scores_quintiles-eng/on_scores_quintiles_EN.csv')
imd = left_join(imd,da[,c('DAUID','ADAUID')],by=c('PRCDDA'='DAUID'))
imd = imd %>%
group_by(ADAUID) %>%
summarise(
pop = sum(Dissemination.area..DA..Population),
RI = weighted.mean(Residential.instability.Scores,Dissemination.area..DA..Population),
ED = weighted.mean(Economic.dependency.Scores,Dissemination.area..DA..Population),
EC = weighted.mean(Ethno.cultural.composition.Scores,Dissemination.area..DA..Population),
SV = weighted.mean(Situational.vulnerability.Scores,Dissemination.area..DA..Population)
)
imd$ADAUID = as.numeric(imd$ADAUID)
cenpop = read.csv('D:/COVID_19/Data/census_subset.csv')
imd = left_join(imd,cenpop[,c('ADAUID','popDens')],)
imd$popDens = log(as.numeric(imd$popDens))
imd$urb = 'Urban'
imd$urb[imd$popDens < 6] = 'Rural'
nday = max(df_bl$jDay)
imdstat = c('RI','ED','EC','popDens')
mstat = c('bl_avg_h_RoG','bl_avg_TotalDur','bl_avg_d_shannon')
outdf_stat = data.frame(t = NULL,mstat=NULL,imd=NULL,cor=NULL,stringsAsFactors = F)
outdf_pval = data.frame(t = NULL,mstat=NULL,imd=NULL,pval=NULL,stringsAsFactors = F)
outdf_urb = data.frame(t = NULL,mstat=NULL,imd=NULL,cor=NULL,stringsAsFactors = F)
#outdf_pval = data.frame(t = 1:nday,stat='X',RoG=0,TOH=0,DIV=0,stringsAsFactors = F)
for (i in 1:nday){
temp_df = subset(df_bl,jDay == i)
temp_df = left_join(temp_df, imd, by='ADAUID')
for (s in imdstat){
for (m in mstat){
cr = cor.test(temp_df[,s],temp_df[,m])
outdf_stat = rbind(outdf_stat,c(t=i,mstat=m,imd=s,cor=cr$estimate))
outdf_pval = rbind(outdf_pval,c(t=i,mstat=m,imd=s,pval=cr$p.value))
cr2 = cor.test(temp_df[temp_df$urb=='Urban',s],
temp_df[temp_df$urb=='Urban',m])
outdf_urb = rbind(outdf_urb,c(t=i,mstat=m,imd=s,cor=cr2$estimate))
}
}
}
names(outdf_stat) = c('jDay','mstat','imd','cor')
outdf_stat$jDay = as.numeric(outdf_stat$jDay)
outdf_stat$cor = as.numeric(outdf_stat$cor)
names(outdf_pval) = c('jDay','mstat','imd','pval')
outdf_pval$jDay = as.numeric(outdf_pval$jDay)
outdf_pval$pval = as.numeric(outdf_pval$pval)
names(outdf_urb) = c('jDay','mstat','imd','cor')
outdf_urb$jDay = as.numeric(outdf_urb$jDay)
outdf_urb$cor = as.numeric(outdf_urb$cor)
# temp$Stat = factor(temp$Stat,levels=c('RoG','TOH','DIV'))
#
# ts1 = temp[temp$Stat=='RoG',]
# ts2 = temp[temp$Stat=='TOH',]
# ts3 = temp[temp$Stat=='DIV',]
# f7 = rep(1/7,7)
# ts1$fval = stats::filter(ts1$Value,f7,sides=2)
# ts2$fval = stats::filter(ts2$Value,f7,sides=2)
# ts3$fval = stats::filter(ts3$Value,f7,sides=2)
cor_plot = function(ts,imdvar,f=7){
ts = subset(ts,imd == imdvar)
ff = rep(1/f,f)
ts$fval = NA
for (i in unique(ts$mstat)){
ind = which(ts$mstat == i)
ts$fval[ind] = stats::filter(ts$cor[ind],ff,sides=2)
}
txtsz=3
days_vec = c(77, 104, 141, 164, 199, 223, 258, 291, 328, 361)
ts$mstat = factor(ts$mstat,levels=c('bl_avg_h_RoG','bl_avg_TotalDur','bl_avg_d_shannon'),labels=c('RoG','TOH','DIV'))
cor = ggplot() +
geom_line(data=ts,aes(x=jDay,y=cor,group=mstat),color='grey') +
geom_line(data=ts,aes(x=jDay,y=fval,colour=mstat)) +
scale_color_manual(values=c('blue','purple','black')) +
#ylim(-0.6,0.6)+
xlab('') +
ylab(paste0('r (',imdvar,')')) +
scale_x_continuous(breaks=c(1, 32, 61, 92, 122, 153, 183,214,245,275,306,336),
labels=c('Jan','Feb','Mar','Apr','May','Jun',
'Jul','Aug','Sep','Oct','Nov','Dec')) +
geom_vline(xintercept=days_vec[1]-0.5,col='red') +                  #Lockdown - Mar 17
geom_vline(xintercept=days_vec[3]-0.5,col='orange') +               #Stage 1 - May 20
geom_vline(xintercept=days_vec[4]-0.5,col='#DBA800',lty=1) +        #Stage 2 - Jun 12
geom_vline(xintercept=days_vec[5]-0.5,col='#005000',lty=1) +        #Stage 3 - Jul 17
geom_vline(xintercept=days_vec[8]-7.5,col='#DBA800',lty=1) +        #Stage 2 - Oct 10
geom_vline(xintercept=days_vec[9]-0.5,col='red',lty=2) +    #Toronto Lockdown - Nov23
geom_vline(xintercept=days_vec[10]-0.5,col='red',lty=1) +        #Lockdown - Dec 26
annotate('text',x=days_vec[1]-5,y=Inf,hjust=1.1,label='Lockdown - Mar 17',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[3]-5,y=Inf,hjust=1.1,label='Stage 1 - May 20',angle=90,color='orange',size=txtsz)+
annotate('text',x=days_vec[4]-5,y=Inf,hjust=1.1,label='Stage 2 - Jun 12',angle=90,color='#DBA800',size=txtsz)+
annotate('text',x=days_vec[5]-5,y=Inf,hjust=1.1,label='Stage 3 - Jul 17',angle=90,color='#005000',size=txtsz)+
annotate('text',x=days_vec[8]-12,y=Inf,hjust=1.1,label='Stage 2* - Oct 10',angle=90,color='#DBA800',size=txtsz) +
annotate('text',x=days_vec[9]-5,y=Inf,hjust=1.1,label='Lockdown* -  Nov 23',angle=90,color='red',size=txtsz)+
annotate('text',x=days_vec[10]-5,y=Inf,hjust=1.1,label='Lockdown - Dec 26',angle=90,color='red',size=txtsz)+
geom_hline(yintercept=0.097,col='coral',lty=2) +
geom_hline(yintercept=-0.097,col='coral',lty=2) +
geom_hline(yintercept=0,col='grey80',lty=2) +
geom_hline(yintercept=-0.097,col='coral',lty=2) +
theme_light() +
theme(legend.position='none')
return(cor)
}
p1 = cor_plot(outdf_stat,'ED')
p2 = cor_plot(outdf_stat,'EC')
p3 = cor_plot(outdf_stat,'RI')
p4 = cor_plot(outdf_stat,'popDens')
p5 = cor_plot(outdf_urb,'EC')
p1 = p1 + ylab('r (Economic)')
p2 = p2 + ylab('r (Ethno-Cultural)')
p3 = p3 + ylab('r (Residential)')
p4 = p4 + ylab('r (Pop Dens)')
p5 = p5 + ylab('r (urban only Ethno-Cultural)')
p1 = p1 + labs(tag='a)')
p2 = p2 + labs(tag='b)')
p3 = p3 + labs(tag='c)')
p4 = p4 + labs(tag='d)')
p1 = p1 + theme(legend.position = c(0.82,0.15),
legend.title = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.direction='horizontal'
)
gg = grid.arrange(p1,p2,p3,p4,ncol=1)
ggsave(gg,filename='Fig 2 - Correlation Plot.png',width=8,height=10)
covid
devtools::install_github('jedalong/wildlifeDI')
### Cacheing data for speed
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(wildlifeDI)
library(adehabitatLT)
library(ggplot2)
data(does)
does
plot(does)
plt <- dcPlot(does,tc=15*60,dmax=1000)
plt
doecons <- conProcess(does,dc=50,tc=15*60)
doecons <- conProcess(does,dc=50,tc=15*60)
doephas <- conPhase(doecons, pc=60*60)
conSummary(doephas)
doepair <- conPairs(doephas)
doetemp <- conTemporal(doephas,units='mins')
devtools::install_github('jedalong/wildlifeDI')
devtools::install_github('jedalong/wildlifeDI')
devtools::install_github('wildlifeDI')
devtools::install_github('jedalong/wildlifeDI')
### Cacheing data for speed
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
hist(as.numeric(doetemp$duration)) #figure 2d
### Cacheing data for speed
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(wildlifeDI)
library(adehabitatLT)
library(ggplot2)
data(does)
does
plot(does)
plt <- dcPlot(does,tc=15*60,dmax=1000)
plt
doecons <- conProcess(does,dc=50,tc=15*60)
doephas <- conPhase(doecons, pc=60*60)
conSummary(doephas)
doepair <- conPairs(doephas)
doetemp <- conTemporal(doephas,units='mins')
doepair$hod <- as.POSIXlt(doepair$date)$hour + as.POSIXlt(doepair$date)$min / 60  #convert POSIX to hours
doetemp$hod <- as.POSIXlt(doetemp$start_time)$hour + as.POSIXlt(doetemp$start_time)$min / 60  #convert POSIX to hours
doepair$dom <- as.POSIXlt(doepair$date)$mday
hist(doepair$dom,breaks=0:30)
hist(doepair$hod,breaks=0:24) #Figure 2b
hist(doetemp$hod,breaks=0:24) #Figure 2c
does
traj = does
tr1 <- ld(traj)
prj4string <- attr(traj,'proj4string')
spo = st_as_sf(dfs,coords=c('x','y'),crs=prj4string)
library(sf)
spo = st_as_sf(dfs,coords=c('x','y'),crs=prj4string)
spo = st_as_sf(tr1,coords=c('x','y'),crs=prj4string)
id = NULL #fix global variable issue in package
g = dplyr::group_by(spo,id)
spl = st_cast(g,"LINESTRING")
plot(spo['id'])
plot(spl['id'])
g = dplyr::group_by(spo,id)
s = dplyr::summarise(g,
traj_begin = min(date),
traj_end = max(date),
npt = dplyr::n(),
do_union=FALSE)
s2 = s[s$npt > 1,]
spl = st_cast(g,"LINESTRING")
plot(spl['id'])
spl = st_cast(s2,"LINESTRING")
plot(spl['id'])
devtools::install_github('jedalong/widllifeDI')
devtools::install_github('jedalong/wildlifeDI')
### Cacheing data for speed
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(wildlifeDI)
library(adehabitatLT)
library(ggplot2)
data(does)
does
plot(does)
plt <- dcPlot(does,tc=15*60,dmax=1000)
plt
doecons <- conProcess(does,dc=50,tc=15*60)
doephas <- conPhase(doecons, pc=60*60)
conSummary(doephas)
doepair <- conPairs(doephas)
doetemp <- conTemporal(doephas,units='mins')
doepair$hod <- as.POSIXlt(doepair$date)$hour + as.POSIXlt(doepair$date)$min / 60  #convert POSIX to hours
doetemp$hod <- as.POSIXlt(doetemp$start_time)$hour + as.POSIXlt(doetemp$start_time)$min / 60  #convert POSIX to hours
doepair$dom <- as.POSIXlt(doepair$date)$mday
hist(doepair$dom,breaks=0:30)
hist(doepair$hod,breaks=0:24) #Figure 2b
hist(doetemp$hod,breaks=0:24) #Figure 2c
hist(as.numeric(doetemp$duration)) #figure 2d
sf_pt <- ltraj2sf(does)                             # Turn all fixes into sf points
?ltraj2sf
devtools::check()
setwd('D:/RPackages/wildlifeDI/wildlifeDI/')
#test using devtools
devtools::check()
devtools::check()
